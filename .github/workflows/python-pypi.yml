name: "Publish to PyPI"

on:
  #  push:
  #    tags:
  #      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

jobs:
  build:
    name: "Build distribution"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: "Install pypa/build"
        run: python3 -m pip install build --user
      - name: "Build a binary wheel and a source tarball"
        run: python3 -m build
      - name: "Store the distribution packages"
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: "Publish distribution to PyPI"
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/PFB-Toolkit/
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: "Download all the dists"
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: "Publish to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: "Sign the distribution and release"
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
    steps:
      - name: "Download all the dists"
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: "Create Release"
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: "Upload artifact"
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'

