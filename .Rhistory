# How close is the outdoor air fraction compared to outdoor air damper position signal?
# read csv
df <- read.csv("data/LBNL_FDD_Dataset_SDAHU/damper_stuck_100_annual_short.csv")
df <- df[1:100,]
# convert to posixct time
df$timestamp <- as.POSIXct(df$timestamp, format = "%Y-%m-%d %H:%M:%S")
# make a ggplot line of a single day
library(ggplot2)
ggplot(df, aes(x = timestamp, y = outdoor_air_fraction)) +
geom_line() +
geom_line(aes(y = outdoor_air_damper_position), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
theme_bw()
# convert to posixct time
df$timestamp <- as.POSIXct(df$Datetime, format = "%Y-%m-%d %H:%M:%S")
# make a ggplot line of a single day
library(ggplot2)
ggplot(df, aes(x = timestamp, y = outdoor_air_fraction)) +
geom_line() +
geom_line(aes(y = outdoor_air_damper_position), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
theme_bw()
ggplot(df, aes(x = timestamp, y = SA_TEMP)) +
geom_line() +
geom_line(aes(y = outdoor_air_damper_position), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
theme_bw()
ggplot(df, aes(x = timestamp, y = SA_TEMP)) +
geom_line() +
geom_line(aes(y = SA_TEMP), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
theme_bw()
# How close is the outdoor air fraction compared to outdoor air damper position signal?
# read csv
df <- read.csv("data/LBNL_FDD_Dataset_SDAHU/damper_stuck_100_annual_short.csv")
df <- df[1:1000,]
# convert to posixct time
df$timestamp <- as.POSIXct(df$Datetime, format = "%Y-%m-%d %H:%M:%S")
ggplot(df) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue") +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPS_DM), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
theme_bw()
ggplot(df) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue") +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
theme_bw()
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue") +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
theme_bw()
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
theme_bw()
library(dplyr)
# resample to 15 min and calculate mean
df %>%
mutate(timestamp = as.POSIXct(timestamp)) %>%
group_by(timestamp = cut(timestamp, breaks = "15 min")) %>%
summarise(OA_TEMP = mean(OA_TEMP, na.rm = T),
MA_TEMP = mean(MA_TEMP, na.rm = T),
RA_TEMP = mean(RA_TEMP, na.rm = T),
OA_DMPR_DM = mean(OA_DMPR_DM, na.rm = T)) -> df
# make a ggplot line of a single day
library(ggplot2)
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
theme_bw()
# resample to 15 min and calculate mean
df<-df %>%
mutate(timestamp = as.POSIXct(timestamp)) %>%
group_by(timestamp = cut(timestamp, breaks = "15 min")) %>%
summarise(OA_TEMP = mean(OA_TEMP, na.rm = T),
MA_TEMP = mean(MA_TEMP, na.rm = T),
RA_TEMP = mean(RA_TEMP, na.rm = T),
OA_DMPR_DM = mean(OA_DMPR_DM, na.rm = T))
View(df)
# resample to 15 min and calculate mean
df<-df %>%
mutate(timestamp = as.POSIXct(timestamp)) %>%
group_by(timestamp = cut(timestamp, breaks = "15 min")) %>%
summarise(OA_TEMP = mean(OA_TEMP, na.rm = T),
MA_TEMP = mean(MA_TEMP, na.rm = T),
RA_TEMP = mean(RA_TEMP, na.rm = T),
OA_DMPR_DM = mean(OA_DMPR_DM, na.rm = T)) %>%
mutate(timestamp = as.POSIXct(timestamp, format = "%Y-%m-%d %H:%M:%S"))
# make a ggplot line of a single day
library(ggplot2)
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
theme_bw()
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
scale_y_continuous("Precipitation", sec.axis = sec_axis(~ scalefactor, name = "Temperature")) +
scale_x_continuous("Month", breaks = 1:12) +
theme_bw()
scalefactor = 10
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
scale_y_continuous("Precipitation", sec.axis = sec_axis(~ scalefactor, name = "Temperature")) +
scale_x_continuous("Month", breaks = 1:12) +
theme_bw()
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
scale_y_continuous("Precipitation", sec.axis = sec_axis(~.*scalefactor, name = "Temperature")) +
scale_x_continuous("Month", breaks = 1:12) +
theme_bw()
scalefactor = 0.001
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
scale_y_continuous("Precipitation", sec.axis = sec_axis(~.*scalefactor, name = "Command")) +
scale_x_continuous("Month", breaks = 1:12) +
theme_bw()
scalefactor = 0.01
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
scale_y_continuous("Precipitation", sec.axis = sec_axis(~.*scalefactor, name = "Command")) +
scale_x_continuous("Month", breaks = 1:12) +
theme_bw()
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
scale_y_continuous("Temperature [°C]", sec.axis = sec_axis(~.*scalefactor, name = "Command [-]")) +
scale_x_continuous("Month", breaks = 1:12) +
theme_bw()
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
labs(x = "Time", y = "Outdoor Air Fraction") +
scale_y_continuous("Temperature [°C]", sec.axis = sec_axis(~.*scalefactor, name = "Command [-]")) +
theme_bw()
ggplot(df, size = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
scale_y_continuous("Temperature [°C]", sec.axis = sec_axis(~.*scalefactor, name = "Command [-]")) +
theme_bw()
ggplot(df, linewidth = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
scale_y_continuous("Temperature [°C]", sec.axis = sec_axis(~.*scalefactor, name = "Command [-]")) +
theme_bw()
?geom_line
ggplot(df, linewidth = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), linewidth = 2, color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor), color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
scale_y_continuous("Temperature [°C]", sec.axis = sec_axis(~.*scalefactor, name = "Command [-]")) +
theme_bw()
ggplot(df, linewidth = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), linewidth = 2, color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), linewidth = 2,color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), linewidth = 2,color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor),linewidth = 2, color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
scale_y_continuous("Temperature [°C]", sec.axis = sec_axis(~.*scalefactor, name = "Command [-]")) +
theme_bw()
ggplot(df, linewidth = 2) +
geom_line(aes(x = timestamp, y = OA_TEMP), linewidth = 2, color = "blue", show.legend = T) +
geom_line(aes(x = timestamp, y = MA_TEMP), linewidth = 2,color = "green") +
geom_line(aes(x = timestamp, y = RA_TEMP), linewidth = 2,color = "orange") +
geom_line(aes(x = timestamp, y = OA_DMPR_DM/scalefactor),linewidth = 2, color = "red") +
scale_x_datetime(date_breaks = "1 hour", date_labels = "%H:%M") +
scale_y_continuous("Temperature [°C]", sec.axis = sec_axis(~.*scalefactor, name = "Command [-]"))
# How close is the outdoor air fraction compared to outdoor air damper position signal?
# read csv
df <- read.csv("data/LBNL_FDD_Dataset_SDAHU/damper_stuck_100_annual_short.csv")
